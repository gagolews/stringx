% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paste.R
\name{paste}
\alias{paste}
\alias{paste0}
\alias{\%+\%}
\alias{strcat}
\title{Concatenate Strings}
\usage{
paste(..., sep = " ", collapse = NULL, recycle0 = FALSE)

paste0(..., sep = "", collapse = NULL, recycle0 = FALSE)

e1 \%+\% e2

strcat(x, collapse = "", na.rm = FALSE)
}
\arguments{
\item{sep}{a single string; separates terms}

\item{collapse}{a single string or \code{NULL}; an optional
separator if tokens are to be merged into a single string}

\item{recycle0}{a single logical value; if \code{FALSE}, then empty
vectors provided via \code{...} are silently ignored}

\item{e1, e2, ...}{character vectors (or objects coercible to character vectors)
whose corresponding elements are to be concatenated
whose consecutive elements are to be concatenated}

\item{na.rm}{a single logical value; if \code{TRUE}, missing values
are silently ignored}
}
\value{
Return a character vector (in UTF-8).
}
\description{
Concatenate (join) the corresponding/consecutive elements of
given vectors, after converting them to strings.

\code{paste0(...)} is a synonym for \code{paste(..., sep="")}.
}
\details{

}
\examples{

# behaviour of `+` vs. base::paste vs. stringx::paste
x <- structure(c(x=1, y=NA, z=100, w=1000), F="*")
y1 <- structure(c(a=1, b=2, c=3), G="#", F="@")
y2 <- structure(c(a=1, b=2, c=3, d=4), G="#", F="@")
y3 <- structure(1:4, G="#", F="@", dim=c(2, 2), dimnames=list(NULL, c("a", "b")))
x + y1
x + y2
x + y3
y2 + x
base::paste(x, y1)
base::paste(x, y2)
base::paste(x, y3)
stringx::paste(x, y1)
stringx::paste(x, y2)
stringx::paste(x, y3)
base::paste(x, character(0), y2, sep=",")
stringx::paste(x, character(0), y2, sep=",")
x \%+\% y1
x \%+\% y2
x \%+\% y3
y2 \%+\% x
x \%+\% character(0)
strcat(x, collapse=",")
strcat(x, collapse=",", na.rm=TRUE)

}
