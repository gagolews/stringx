% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paste.R
\name{paste}
\alias{paste}
\alias{paste0}
\title{Concatenate Strings}
\usage{
paste(..., sep = " ", collapse = NULL, recycle0 = FALSE)

paste0(..., sep = "", collapse = NULL, recycle0 = FALSE)
}
\arguments{
\item{...}{character vectors (or objects coercible to character vectors)
whose corresponding elements are to be concatenated}

\item{sep}{a single string; separates terms}

\item{collapse}{a single string or \code{NULL}; an optional
separator if tokens are to be merged into a single string}

\item{recycle0}{a single logical value; if \code{FALSE}, then empty
vectors provided via \code{...} are silently ignored}
}
\value{
Return a character vector (in UTF-8).
}
\description{
Concatenate (join) the corresponding/consecutive elements, after
converting them to strings.

\code{paste0(...)} is a synonym for \code{paste(..., sep="")}.
}
\details{
Replacement for base \code{\link[base]{paste}}
implemented with \code{\link[stringi]{stri_join}}.
These are the \pkg{stringi}'s equivalents of the built-in
\code{\link{paste}} function.
\code{stri_c} and \code{stri_paste} are aliases for \code{stri_join}.

In some sense, \code{paste} can be thought of as a string counterpart
of both the \code{`+`} operator and the \code{\link[base]sum} function.
Therefore, we would expect it to behave similarly with regards
to the propagation of missing values and the preservation of object
attributes. Ideally, it would be nice to have two separate functions
(one acting elementwisely on a number of vectors, propagating NAs correctly,
and having \code{sep=""} by default)
and the other for merging all strings in a single vector
(with \code{collapse=""} by default and an additional \code{na.rm=FALSE}
argument).

Inconsistencies in base R:
\itemize{
\item missing values treated as \code{"NA"} strings (it is a well-documented
feature though) [fixed here]
\item partial recycling with no warning "longer object length is not
a multiple of shorter object length" [fixed here]
\item empty vectors are treated as vectors of empty strings [fixed here]
\item input objects' attributes are not preserved [not fixed]
\item \code{paste0} multiplies entities without necessity;
\code{sep=""} should be the default in \code{paste} [not fixed]
\item \code{paste0} treats named argument \code{sep="..."} as one
more vector to concatenate [fixed by introducing sep argument]
}
}
\examples{

# behaviour of `+` vs. base::paste vs. stringb::paste
x <- structure(c(x=1, y=NA, z=100), F="*")
y1 <- structure(c(a=1, b=2), G="#", F="@")
y2 <- structure(c(a=1, b=2, c=3), G="#", F="@")
x + y1
x + y2
base::paste(x, y1)
base::paste(x, y2)
stringb::paste(x, y1)
stringb::paste(x, y2)
base::paste(x, character(0), y2, sep=",")
stringb::paste(x, character(0), y2, sep=",")

}
