% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gregextr.R
\name{regextr2}
\alias{regextr2}
\alias{gregextr2}
\alias{regextr2<-}
\alias{gregextr2<-}
\title{Extract Pattern Occurrences}
\usage{
regextr2(
  x,
  pattern,
  ...,
  ignore_case = FALSE,
  fixed = FALSE,
  capture_groups = FALSE
)

gregextr2(
  x,
  pattern,
  ...,
  ignore_case = FALSE,
  fixed = FALSE,
  capture_groups = FALSE
)

regextr2(x, pattern, ..., ignore_case = FALSE, fixed = FALSE) <- value

gregextr2(x, pattern, ..., ignore_case = FALSE, fixed = FALSE) <- value
}
\arguments{
\item{x}{character vector whose elements are to be examined}

\item{pattern}{character vector of nonempty search patterns}

\item{...}{further arguments to \code{\link[stringi]{stri_locate}},
e.g., \code{omit_empty}, \code{locale}, \code{dotall}}

\item{ignore_case}{single logical value; indicates whether matching
should be case-insensitive}

\item{fixed}{single logical value;
\code{FALSE} for matching with regular expressions
    (see \link[stringi]{about_search_regex});
\code{TRUE} for fixed pattern matching
    (\link[stringi]{about_search_fixed});
\code{NA} for the Unicode collation algorithm
    (\link[stringi]{about_search_coll})}

\item{capture_groups}{single logical value; whether to extract
matches to regex capture groups as well}

\item{value}{character vector  (for \code{regextr})
or list of character vectors  (for \code{gregextr})
defining the replacements strings}

\item{..........}{}
}
\value{
\code{regextr2} ......

\code{gregextr2} ......

\code{capture_groups} ...

These functions preserve the attributes of the longest inputs (unless they
are dropped due to coercion). Missing values in the inputs are propagated
consistently.
}
\description{
\code{regextr2} and \code{gregextr2} extract, respectively, first and all
(i.e., \bold{g}lobally) occurrences of a pattern.
Their replacement versions substitute the matching substrings with
new content.
}
\details{
Convenience functions based on \code{\link{gregexpr2}}
and \code{\link{gsubstrl}} (amongst others).

They are fully vectorised with respect to both \code{x} and
\code{pattern}.

Provided as pipe operator-friendly alternative
to [DEPRECATED] \code{\link[base]{regmatches}}
[DEPRECATED] \code{\link[utils]{strcapture}}.
}
\examples{
# ...

}
\seealso{
The official online manual of \pkg{stringx} at \url{https://stringx.gagolewski.com/}

Related function(s): \code{\link{paste}}, \code{\link{nchar}},
    \code{\link{strsplit}}, \code{\link{gsub2}}
    \code{\link{grepl2}}, \code{\link{gregexpr2}}, \code{\link{gsubstrl}},
}
\author{
\href{https://www.gagolewski.com/}{Marek Gagolewski}
}
